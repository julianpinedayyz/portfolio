---
import ThemeToggle from './ThemeToggle.astro';
---

<header class="fixed w-full z-50 bg-white/80 dark:bg-gray-900/80 backdrop-blur-md py-4 shadow-sm">
  <div class="container mx-auto flex justify-between items-center px-4">
    <a href="/" class="text-2xl font-bold text-blue-600 dark:text-blue-400">JP</a>

    <div class="flex items-center gap-4">
      <!-- Mobile menu button -->
      <button id="menu-toggle" class="md:hidden flex items-center p-2" aria-label="Toggle menu">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="menu-icon">
          <line x1="3" y1="12" x2="21" y2="12"></line>
          <line x1="3" y1="6" x2="21" y2="6"></line>
          <line x1="3" y1="18" x2="21" y2="18"></line>
        </svg>
      </button>

      <!-- Desktop navigation -->
      <nav id="desktop-nav" class="hidden md:flex items-center gap-8">
        <a href="#about" class="nav-link text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400">About</a>
        <a href="#experience" class="nav-link text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400">Experience</a>
        <a href="#projects" class="nav-link text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400">Projects</a>
        <a href="#contact" class="nav-link text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400">Contact</a>
        <ThemeToggle />
        <a href="/Julian Pineda - 5v4.pdf" target="_blank" class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 transition">Resume</a>
      </nav>
    </div>
  </div>

  <!-- Mobile navigation -->
  <div id="mobile-nav" class="absolute top-full left-0 w-full bg-white dark:bg-gray-900 shadow-md py-4 hidden">
    <nav class="container mx-auto flex flex-col items-center gap-4">
      <a href="#about" class="nav-link text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400">About</a>
      <a href="#experience" class="nav-link text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400">Experience</a>
      <a href="#projects" class="nav-link text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400">Projects</a>
      <a href="#contact" class="nav-link text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400">Contact</a>
      <ThemeToggle />
      <a href="/Julian Pineda - 5v4.pdf" target="_blank" class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 transition">Resume</a>
    </nav>
  </div>
</header>

<script>
  // Mobile menu toggle
  const menuToggle = document.getElementById('menu-toggle');
  const mobileNav = document.getElementById('mobile-nav');

  if (menuToggle && mobileNav) {
    menuToggle.addEventListener('click', () => {
      mobileNav.classList.toggle('hidden');
    });
  }

  // Close mobile menu when clicking a nav link
  const mobileNavLinks = mobileNav?.querySelectorAll('.nav-link');
  mobileNavLinks?.forEach(link => {
    link.addEventListener('click', () => {
      mobileNav.classList.add('hidden');
    });
  });

  // Close mobile menu when clicking outside
  document.addEventListener('click', (event) => {
    const target = event.target as HTMLElement;
    if (mobileNav && !mobileNav.classList.contains('hidden') &&
        !mobileNav.contains(target) &&
        menuToggle && !menuToggle.contains(target)) {
      mobileNav.classList.add('hidden');
    }
  });

  // Highlight active section in navigation
  const sections = document.querySelectorAll('section[id]');
  const navLinks = document.querySelectorAll('.nav-link');

  const observerOptions = {
    root: null,
    rootMargin: '0px',
    threshold: 0.2
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const id = entry.target.getAttribute('id');
        navLinks.forEach(link => {
          if (link.getAttribute('href') === `#${id}`) {
            link.classList.add('text-blue-600', 'dark:text-blue-400');
          } else {
            link.classList.remove('text-blue-600', 'dark:text-blue-400');
          }
        });
      }
    });
  }, observerOptions);

  sections.forEach(section => {
    observer.observe(section);
  });
</script>