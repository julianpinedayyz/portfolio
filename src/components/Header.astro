---
import ThemeToggle from './ThemeToggle.astro';
---

<header
  class="sticky top-0 z-50 bg-white dark:bg-charcoal-900 border-b border-gray-200 dark:border-gray-800 py-4"
>
  <div class="site-container flex justify-between items-center">
    <a
      href="/"
      class="text-xl font-bold tracking-tight text-gray-900 dark:text-gray-100 flex items-center"
    >
      <span>Julian Pineda</span>
    </a>

    <div class="flex items-center gap-4">
      <!-- Mobile menu button -->
      <button
        id="menu-toggle"
        class="md:hidden flex items-center p-2 text-gray-900 dark:text-gray-100"
        aria-label="Toggle menu"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="menu-icon"
        >
          <line x1="3" y1="12" x2="21" y2="12"></line>
          <line x1="3" y1="6" x2="21" y2="6"></line>
          <line x1="3" y1="18" x2="21" y2="18"></line>
        </svg>
      </button>

      <!-- Theme toggle for both mobile and desktop -->
      <ThemeToggle />

      <!-- Desktop navigation -->
      <nav id="desktop-nav" class="hidden md:flex items-center gap-8">
        <a
          href="#about"
          class="nav-link text-gray-500 dark:text-gray-400 hover:text-lime-400 dark:hover:text-purple-400 transition-colors"
          >About</a
        >
        <a
          href="#experience"
          class="nav-link text-gray-500 dark:text-gray-400 hover:text-lime-400 dark:hover:text-purple-400 transition-colors"
          >Experience</a
        >
        <a
          href="#services"
          class="nav-link text-gray-500 dark:text-gray-400 hover:text-lime-400 dark:hover:text-purple-400 transition-colors"
          >Services</a
        >
        <a
          href="#contact"
          class="nav-link text-gray-500 dark:text-gray-400 hover:text-lime-400 dark:hover:text-purple-400 transition-colors"
          >Contact</a
        >
        <a
          href="/Julian Pineda - 5v4.pdf"
          target="_blank"
          class="px-4 py-2 text-sm font-medium text-gray-900 dark:text-white bg-lime-400 hover:bg-lime-500 dark:bg-purple-400 dark:hover:bg-purple-500 rounded-[2px] transition-colors"
          >Resume</a
        >
      </nav>
    </div>
  </div>

  <!-- Mobile navigation -->
  <div
    id="mobile-nav"
    class="absolute top-full left-0 w-full bg-white dark:bg-charcoal-900 shadow-md py-4 hidden border-t border-gray-200 dark:border-gray-800"
  >
    <nav class="site-container flex flex-col items-center gap-4">
      <a
        href="#about"
        class="nav-link text-gray-500 dark:text-gray-400 hover:text-lime-400 dark:hover:text-purple-400 transition-colors"
        >About</a
      >
      <a
        href="#experience"
        class="nav-link text-gray-500 dark:text-gray-400 hover:text-lime-400 dark:hover:text-purple-400 transition-colors"
        >Experience</a
      >
      <a
        href="#services"
        class="nav-link text-gray-500 dark:text-gray-400 hover:text-lime-400 dark:hover:text-purple-400 transition-colors"
        >Services</a
      >
      <a
        href="#contact"
        class="nav-link text-gray-500 dark:text-gray-400 hover:text-lime-400 dark:hover:text-purple-400 transition-colors"
        >Contact</a
      >
      <a
        href="/Julian Pineda - 5v4.pdf"
        target="_blank"
        class="px-4 py-2 text-sm font-medium text-gray-900 dark:text-white bg-lime-400 hover:bg-lime-500 dark:bg-purple-400 dark:hover:bg-purple-500 rounded-[2px] transition-colors"
        >Resume</a
      >
    </nav>
  </div>
</header>

<script>
  // Mobile menu toggle
  const menuToggle = document.getElementById('menu-toggle');
  const mobileNav = document.getElementById('mobile-nav');

  if (menuToggle && mobileNav) {
    menuToggle.addEventListener('click', () => {
      mobileNav.classList.toggle('hidden');
    });
  }

  // Close mobile menu when clicking a nav link
  const mobileNavLinks = mobileNav?.querySelectorAll('.nav-link');
  mobileNavLinks?.forEach((link) => {
    link.addEventListener('click', () => {
      mobileNav.classList.add('hidden');
    });
  });

  // Close mobile menu when clicking outside
  document.addEventListener('click', (event) => {
    const target = event.target as HTMLElement;
    if (
      mobileNav &&
      !mobileNav.classList.contains('hidden') &&
      !mobileNav.contains(target) &&
      menuToggle &&
      !menuToggle.contains(target)
    ) {
      mobileNav.classList.add('hidden');
    }
  });

  // Highlight active section in navigation
  const sections = document.querySelectorAll('section[id]');
  const navLinks = document.querySelectorAll('.nav-link');

  const observerOptions = {
    root: null,
    rootMargin: '0px',
    threshold: 0.2,
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        const id = entry.target.getAttribute('id');
        navLinks.forEach((link) => {
          if (link.getAttribute('href') === `#${id}`) {
            link.classList.add(
              'text-lime-400',
              'dark:text-purple-400',
              'font-medium',
            );
          } else {
            link.classList.remove(
              'text-lime-400',
              'dark:text-purple-400',
              'font-medium',
            );
          }
        });
      }
    });
  }, observerOptions);

  sections.forEach((section) => {
    observer.observe(section);
  });
</script>
