---
import Palette from './Palette.astro';
import StatsCards from './StatsCards.astro';
---

<!-- Fixed Toggle Button -->
<button
  id="sandbox-toggle"
  class="fixed right-4 bottom-4 z-50 flex items-center justify-center w-12 h-12 bg-[#AAC0AA] rounded-full shadow-lg hover:bg-opacity-90 transition-all focus:outline-none focus:ring-2 focus:ring-[#7DA1BF]"
  aria-expanded="false"
  aria-controls="sandbox-section"
>
  <span class="sr-only">Toggle UI Sandbox</span>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    class="h-6 w-6 text-[#24272B]"
    fill="none"
    viewBox="0 0 24 24"
    stroke="currentColor"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
    ></path>
  </svg>
</button>

<section
  id="sandbox-section"
  class="py-12 bg-white border-b border-gray-200 hidden"
>
  <div class="site-container">
    <h2 class="text-3xl font-bold mb-6 text-gray-800">UI Sandbox</h2>

    <!-- Tabs Navigation -->
    <div class="flex border-b border-gray-200 mb-8" role="tablist">
      <button
        id="tab-elements"
        class="px-4 py-2 font-medium text-gray-800 border-b-2 border-gray-800"
        role="tab"
        aria-selected="true"
        aria-controls="panel-elements"
      >
        UI Elements
      </button>
      <button
        id="tab-palette"
        class="px-4 py-2 font-medium text-gray-500 hover:text-gray-800"
        role="tab"
        aria-selected="false"
        aria-controls="panel-palette"
      >
        Color Palette
      </button>
      <button
        id="tab-stats"
        class="px-4 py-2 font-medium text-gray-500 hover:text-gray-800"
        role="tab"
        aria-selected="false"
        aria-controls="panel-stats"
      >
        Stats Cards
      </button>
    </div>

    <!-- UI Elements Tab Panel -->
    <div id="panel-elements" role="tabpanel" aria-labelledby="tab-elements">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <!-- Color Palette Section -->
        <div class="bg-white p-6 shadow-sm border border-gray-200">
          <h3 class="text-xl font-semibold mb-4 text-gray-800">
            Color Palette
          </h3>
          <div class="space-y-3">
            <div class="flex items-center">
              <div class="w-12 h-12 bg-[#AAC0AA] mr-3"></div>
              <div>
                <div class="font-medium text-gray-800">Sage Green</div>
                <div class="text-sm text-gray-500">#AAC0AA</div>
              </div>
            </div>
            <div class="flex items-center">
              <div class="w-12 h-12 bg-[#7DA1BF] mr-3"></div>
              <div>
                <div class="font-medium text-gray-800">Subtle Blue</div>
                <div class="text-sm text-gray-500">#7DA1BF</div>
              </div>
            </div>
            <div class="flex items-center">
              <div class="w-12 h-12 bg-[#E6A57E] mr-3"></div>
              <div>
                <div class="font-medium text-gray-800">Terracotta</div>
                <div class="text-sm text-gray-500">#E6A57E</div>
              </div>
            </div>
            <div class="flex items-center">
              <div class="w-12 h-12 bg-[#A63D40] mr-3"></div>
              <div>
                <div class="font-medium text-gray-800">Muted Red</div>
                <div class="text-sm text-gray-500">#A63D40</div>
              </div>
            </div>
          </div>
        </div>

        <!-- Button Styles -->
        <div class="bg-[#AAC0AA] p-6 shadow-sm border border-gray-200">
          <h3 class="text-xl font-semibold mb-4 text-[#24272B]">
            Button Styles
          </h3>
          <div class="space-y-4">
            <button
              class="px-5 py-2 bg-[#E6A57E] text-[#24272B] font-medium hover:bg-opacity-90 transition-all"
            >
              Primary Button
            </button>

            <button
              class="px-4 py-2 border border-[#A63D40] text-[#24272B] text-sm hover:bg-[#E8E2CB] transition-all block"
            >
              Secondary Button
            </button>

            <button
              class="w-full flex items-center justify-between border border-[#A63D40] overflow-hidden"
            >
              <span class="px-4 py-2 text-[#24272B]">Button with Icon</span>
              <div
                class="h-10 w-10 bg-[#A63D40] border-l border-[#A63D40] flex items-center justify-center"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-4 w-4 text-white"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
                </svg>
              </div>
            </button>

            <button
              class="w-10 h-10 bg-[#7DA1BF] flex items-center justify-center hover:bg-opacity-90 transition-all"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 text-[#24272B]"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  fill-rule="evenodd"
                  d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z"
                  clip-rule="evenodd"></path>
              </svg>
            </button>
          </div>
        </div>

        <!-- Typography -->
        <div class="bg-[#E8E2CB] p-6 shadow-sm border border-gray-200">
          <h3 class="text-xl font-semibold mb-4 text-[#24272B]">Typography</h3>
          <div class="space-y-3">
            <div>
              <div class="text-xs text-[#A63D40]">Heading 1</div>
              <div class="text-4xl font-bold text-[#24272B]">
                The quick brown fox
              </div>
            </div>
            <div>
              <div class="text-xs text-[#A63D40]">Heading 2</div>
              <div class="text-3xl font-bold text-[#24272B]">
                The quick brown fox
              </div>
            </div>
            <div>
              <div class="text-xs text-[#A63D40]">Heading 3</div>
              <div class="text-2xl font-semibold text-[#24272B]">
                The quick brown fox
              </div>
            </div>
            <div>
              <div class="text-xs text-[#A63D40]">Body</div>
              <div class="text-base text-[#24272B]">
                The quick brown fox jumps over the lazy dog.
              </div>
            </div>
            <div>
              <div class="text-xs text-[#A63D40]">Small</div>
              <div class="text-sm text-[#24272B]">
                The quick brown fox jumps over the lazy dog.
              </div>
            </div>
          </div>
        </div>

        <!-- Card Styles -->
        <div class="bg-[#AAC0AA] p-6 shadow-sm border border-gray-200">
          <h3 class="text-xl font-semibold mb-4 text-[#24272B]">Card Styles</h3>
          <div class="space-y-4">
            <div class="bg-[#E6A57E] p-4">
              <h4 class="font-medium text-[#24272B]">Terracotta Card</h4>
              <p class="text-sm text-[#24272B] mt-1">
                With square corners and padding.
              </p>
            </div>

            <div class="bg-[#A63D40] p-4">
              <h4 class="font-medium text-white">Red Card</h4>
              <p class="text-sm text-white mt-1">
                With square corners and padding.
              </p>
            </div>

            <div class="bg-[#E8E2CB] p-4 border border-[#24272B] shadow-sm">
              <h4 class="font-medium text-[#24272B]">Bordered Card</h4>
              <p class="text-sm text-[#24272B] mt-1">
                With border and subtle shadow.
              </p>
            </div>
          </div>
        </div>

        <!-- Form Elements -->
        <div class="bg-white p-6 shadow-sm border border-gray-200">
          <h3 class="text-xl font-semibold mb-4 text-gray-800">
            Form Elements
          </h3>
          <div class="space-y-4">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1"
                >Input Field</label
              >
              <input
                type="text"
                placeholder="Type something..."
                class="w-full px-4 py-2 border border-gray-300 focus:ring-2 focus:ring-[#E6A57E] focus:border-transparent"
              />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1"
                >Select Dropdown</label
              >
              <select
                class="w-full px-4 py-2 border border-gray-300 focus:ring-2 focus:ring-[#E6A57E] focus:border-transparent"
              >
                <option>Option 1</option>
                <option>Option 2</option>
                <option>Option 3</option>
              </select>
            </div>

            <div class="flex items-center">
              <input
                type="checkbox"
                class="h-4 w-4 text-[#7DA1BF] focus:ring-[#7DA1BF] border-gray-300"
              />
              <label class="ml-2 block text-sm text-gray-700">Checkbox</label>
            </div>

            <div class="flex items-center">
              <input
                type="radio"
                class="h-4 w-4 text-[#A63D40] focus:ring-[#A63D40] border-gray-300"
              />
              <label class="ml-2 block text-sm text-gray-700"
                >Radio Button</label
              >
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1"
                >Textarea</label
              >
              <textarea
                rows="3"
                placeholder="Write a description..."
                class="w-full px-4 py-2 border border-gray-300 focus:ring-2 focus:ring-[#E6A57E] focus:border-transparent"
              ></textarea>
            </div>
          </div>
        </div>

        <!-- Navigation Elements -->
        <div class="bg-[#E8E2CB] p-6 shadow-sm border border-gray-200">
          <h3 class="text-xl font-semibold mb-4 text-[#24272B]">Navigation</h3>
          <div class="space-y-4">
            <div class="flex space-x-4 border-b border-[#24272B]">
              <div class="text-[#A63D40] border-b-2 border-[#A63D40] py-2">
                Tab 1
              </div>
              <div class="text-[#24272B] py-2">Tab 2</div>
              <div class="text-[#24272B] py-2">Tab 3</div>
            </div>

            <div
              class="flex items-center justify-between py-2 border-b border-[#24272B]"
            >
              <div class="text-[#24272B] font-medium">Dropdown Menu</div>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 text-[#24272B]"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  fill-rule="evenodd"
                  d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                  clip-rule="evenodd"></path>
              </svg>
            </div>

            <div class="flex space-x-3">
              <span
                class="px-3 py-1 bg-[#A63D40] text-white text-sm rounded-full"
              >
                Tag 1
              </span>
              <span
                class="px-3 py-1 bg-[#7DA1BF] text-white text-sm rounded-full"
              >
                Tag 2
              </span>
              <span
                class="px-3 py-1 bg-[#E6A57E] text-[#24272B] text-sm rounded-full"
              >
                Tag 3
              </span>
            </div>

            <div class="flex items-center justify-between">
              <div class="flex space-x-1">
                <a
                  href="#"
                  class="w-8 h-8 flex items-center justify-center border border-[#24272B] text-[#24272B]"
                  >1</a
                >
                <a
                  href="#"
                  class="w-8 h-8 flex items-center justify-center border border-[#24272B] bg-[#24272B] text-white"
                  >2</a
                >
                <a
                  href="#"
                  class="w-8 h-8 flex items-center justify-center border border-[#24272B] text-[#24272B]"
                  >3</a
                >
              </div>
              <a href="#" class="text-[#A63D40] text-sm">View All</a>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Palette Tab Panel -->
    <div
      id="panel-palette"
      role="tabpanel"
      aria-labelledby="tab-palette"
      class="hidden"
    >
      <!-- Custom light-background wrapper for Palette component -->
      <div class="bg-white -mx-4 p-4 rounded-lg">
        <div class="text-gray-800 mb-8">
          <p class="max-w-3xl">
            The full color palette showcase is embedded below. Click on any
            color to copy its hex code. The palettes are inspired by Bauhaus
            design principles.
          </p>
        </div>
        <div class="rounded-lg overflow-hidden">
          <Palette />
        </div>
      </div>
    </div>

    <!-- Stats Cards Tab Panel -->
    <div
      id="panel-stats"
      role="tabpanel"
      aria-labelledby="tab-stats"
      class="hidden"
    >
      <!-- Custom light-background wrapper for StatsCards component -->
      <div class="bg-white -mx-4 p-4 rounded-lg">
        <div class="text-gray-800 mb-8">
          <p class="max-w-3xl">
            These stats cards showcase different data visualization styles.
            They're designed to present key metrics in an engaging format.
          </p>
        </div>
        <div class="rounded-lg overflow-hidden">
          <StatsCards />
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Toggle Sandbox Visibility
    const toggleButton = document.getElementById('sandbox-toggle');
    const sandboxSection = document.getElementById('sandbox-section');

    // Function to update button icon based on state
    const updateToggleButton = (isVisible) => {
      toggleButton.setAttribute('aria-expanded', isVisible ? 'true' : 'false');

      // Change icon based on state
      if (isVisible) {
        toggleButton.innerHTML = `
          <span class="sr-only">Hide UI Sandbox</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-[#24272B]" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        `;
      } else {
        toggleButton.innerHTML = `
          <span class="sr-only">Show UI Sandbox</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-[#24272B]" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
          </svg>
        `;
      }
    };

    // Function to save preference
    const saveSandboxPreference = (isVisible) => {
      if (typeof localStorage !== 'undefined') {
        localStorage.setItem('sandboxVisible', isVisible ? 'true' : 'false');
      }
    };

    // Function to load preference
    const loadSandboxPreference = () => {
      if (typeof localStorage !== 'undefined') {
        const isVisible = localStorage.getItem('sandboxVisible') === 'true';

        if (isVisible) {
          sandboxSection.classList.remove('hidden');
        } else {
          sandboxSection.classList.add('hidden');
        }

        updateToggleButton(isVisible);
        return isVisible;
      }
      return false;
    };

    // Toggle functionality
    toggleButton.addEventListener('click', () => {
      const isCurrentlyVisible = !sandboxSection.classList.contains('hidden');
      const newVisibility = !isCurrentlyVisible;

      if (newVisibility) {
        sandboxSection.classList.remove('hidden');
        // Scroll to sandbox
        sandboxSection.scrollIntoView({ behavior: 'smooth' });
      } else {
        sandboxSection.classList.add('hidden');
      }

      updateToggleButton(newVisibility);
      saveSandboxPreference(newVisibility);
    });

    // Initialize with saved preference
    loadSandboxPreference();

    // Tab functionality
    const tabs = document.querySelectorAll('[role="tab"]');
    const tabPanels = document.querySelectorAll('[role="tabpanel"]');

    tabs.forEach((tab) => {
      tab.addEventListener('click', () => {
        // Deactivate all tabs
        tabs.forEach((t) => {
          t.setAttribute('aria-selected', 'false');
          t.classList.remove('border-gray-800', 'text-gray-800');
          t.classList.add('text-gray-500');
        });

        // Activate clicked tab
        tab.setAttribute('aria-selected', 'true');
        tab.classList.remove('text-gray-500');
        tab.classList.add('border-b-2', 'border-gray-800', 'text-gray-800');

        // Hide all panels
        tabPanels.forEach((panel) => {
          panel.classList.add('hidden');
        });

        // Show corresponding panel
        const panelId = tab.getAttribute('aria-controls');
        document.getElementById(panelId).classList.remove('hidden');
      });
    });

    // Optional: Store active tab in localStorage
    const setActiveTab = (tabId) => {
      if (typeof localStorage !== 'undefined') {
        localStorage.setItem('activeSandboxTab', tabId);
      }
    };

    // Load saved tab preference
    const loadActiveTab = () => {
      if (typeof localStorage !== 'undefined') {
        const activeTab = localStorage.getItem('activeSandboxTab');
        if (activeTab) {
          const tab = document.getElementById(activeTab);
          if (tab) {
            tab.click();
          }
        }
      }
    };

    // Save tab selection
    tabs.forEach((tab) => {
      tab.addEventListener('click', () => {
        setActiveTab(tab.id);
      });
    });

    // Initialize with saved preference
    loadActiveTab();
  });
</script>
