---
const services = [
  {
    title: 'Digital Transformation Strategy',
    description:
      'Development of comprehensive digital transformation roadmaps for organizations looking to modernize their digital presence and operations.',
  },
  {
    title: 'Technology Leadership',
    description:
      'Interim and consulting CTO services to help organizations build and scale their technology teams and infrastructure.',
  },
  {
    title: 'UI/UX Design & Development',
    description:
      'Creation of user-centered digital experiences with a focus on accessibility, usability, and conversion optimization.',
  },
  {
    title: 'Accessibility Implementation',
    description:
      'Implementation of web accessibility standards (WCAG) to ensure digital products are usable by people of all abilities.',
  },
  {
    title: 'AI & ML Integration',
    description:
      'Strategic integration of artificial intelligence and machine learning solutions to enhance product capabilities and user experiences.',
  },
  {
    title: 'Enterprise Platform Development',
    description:
      'End-to-end development of scalable enterprise platforms with robust architecture and optimized performance.',
  },
];

const keyValues = [
  {
    number: '01',
    title: 'Strategic Vision',
    description:
      'Developing forward-thinking strategies that align technology initiatives with business objectives and industry trends.',
  },
  {
    number: '02',
    title: 'Technical Excellence',
    description:
      'Bringing technical fluency and hands-on expertise to deliver high-quality digital solutions that scale effectively.',
  },
  {
    number: '03',
    title: 'User-Centered Approach',
    description:
      'Focusing on creating accessible, intuitive digital experiences that prioritize user needs and business outcomes.',
  },
];
---

<section id="services" class="py-24" style="background-color: #DCDCDC;">
  <div class="site-container">
    <div class="lg:flex lg:flex-wrap">
      <!-- Title container with fixed width -->
      <div class="w-full lg:w-[600px] mb-12 lg:mb-0">
        <h2 class="text-4xl font-bold tracking-tight" style="color: #333333;">
          Services
        </h2>
      </div>

      <!-- Services list container -->
      <div class="w-full lg:flex-1">
        <div class="space-y-1">
          {
            services.map((service, index) => (
              <div class="border-b" style="border-color: #999999;">
                <button
                  class="service-toggle w-full py-5 flex justify-between items-center text-left"
                  data-index={index}
                >
                  <span
                    class="text-lg font-bold tracking-tight"
                    style="color: #333333;"
                  >
                    {service.title}
                  </span>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="#C22929"
                    stroke-width="2"
                    class="plus-icon transition-transform"
                  >
                    <line x1="12" y1="5" x2="12" y2="19" />
                    <line x1="5" y1="12" x2="19" y2="12" />
                  </svg>
                </button>
                <div class="service-content py-2 pb-6 hidden">
                  <p style="color: #333333;">{service.description}</p>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Toggle service details
  const serviceToggles = document.querySelectorAll('.service-toggle');

  serviceToggles.forEach((toggle) => {
    toggle.addEventListener('click', () => {
      const content = toggle.nextElementSibling as HTMLElement;
      const icon = toggle.querySelector('.plus-icon');

      // Toggle this item
      content.classList.toggle('hidden');
      icon.classList.toggle('rotate-45');

      // Optional: Close other items when opening a new one
      const index = toggle.getAttribute('data-index');
      serviceToggles.forEach((otherToggle) => {
        if (otherToggle !== toggle) {
          const otherContent = otherToggle.nextElementSibling as HTMLElement;
          const otherIcon = otherToggle.querySelector('.plus-icon');

          otherContent.classList.add('hidden');
          otherIcon.classList.remove('rotate-45');
        }
      });
    });
  });
</script>
