---
// ProjectsTable.astro - A component displaying projects in a table format using the Bauhaus palette
import ProfileButtons from '../ui/ProfileButtons.astro';
import { projects, socialMediaLinks } from '../../data/projects';

// Calculate initial visible projects and if we need a load more button
const initialVisibleCount = 10;
const hasMoreProjects = projects.length > initialVisibleCount;

// Extract social media URLs for convenience
const { linkedIn: linkedInUrl, github: gitHubUrl } = socialMediaLinks;
---

<section id="projects" class="py-20 bg-[#0E0E2C] text-white">
  <div class="site-container">
    <!-- Create a flex container for the layout -->
    <div class="flex flex-col lg:flex-row">
      <!-- Fixed-width column for heading - 300px on desktop, full width on mobile -->
      <div class="w-full lg:w-[340px] flex-shrink-0 mb-6 lg:mb-0">
        <h2 class="h2-heading text-[#e7dfd0]">All Projects</h2>
      </div>

      <!-- Table column that takes the remaining width -->
      <div class="flex-grow">
        <!-- Projects table -->
        <div class="overflow-x-auto">
          <table class="w-full border-collapse">
            <thead class="">
              <tr class="border-b border-[#C8102E]">
                <th class="py-4 text-center font-medium w-8">
                  <svg
                    class="w-5 h-5 inline-block"
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  >
                    <path d="M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z"
                    ></path>
                    <circle cx="12" cy="12" r="3"></circle>
                  </svg>
                </th>
                <th class="py-4 text-left font-medium">Project</th>
                <th class="py-4 text-left font-medium xl:table-cell hidden"
                  >Made at</th
                >
                <th class="py-4 text-left font-medium md:table-cell hidden"
                  >Service Provided</th
                >
                <th class="py-4 text-left font-medium pl-4">Year</th>
              </tr>
            </thead>
            <tbody id="projects-table-body">
              {
                projects.map((project, index) => (
                  <tr
                    class={`border-b border-white/10 hover:bg-opacity-10 hover:bg-white transition-colors project-row ${index >= initialVisibleCount ? 'hidden' : ''}`}
                  >
                    {/* Icon column - for status icons only */}
                    <td class="py-0.5 px-1.5 align-top md:py-2.5 sm:py-1.5 w-8 text-center">
                      <div
                        class="flex flex-col items-center gap-2 pt-0.5"
                        role="list"
                        aria-label="Project access requirements"
                      >
                        {project.canadaOnly && (
                          <span class="relative group" role="listitem">
                            <svg
                              class="w-4 h-4"
                              xmlns="http://www.w3.org/2000/svg"
                              viewBox="0 0 20 20"
                              fill="currentColor"
                              aria-hidden="true"
                            >
                              <path
                                fill-rule="evenodd"
                                d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z"
                                clip-rule="evenodd"
                              />
                            </svg>
                            <span
                              class="absolute bottom-full left-0 -translate-y-1 invisible group-hover:visible bg-black text-white text-xs px-2 py-1 whitespace-nowrap z-10"
                              role="tooltip"
                              aria-label="Canada site only. VPN required."
                            >
                              Canada site only. VPN required.
                            </span>
                          </span>
                        )}

                        {project.authRequired && (
                          <span class="relative group" role="listitem">
                            <svg
                              class="w-4 h-4"
                              xmlns="http://www.w3.org/2000/svg"
                              viewBox="0 0 24 24"
                              fill="none"
                              stroke="currentColor"
                              stroke-width="1.5"
                              aria-hidden="true"
                            >
                              <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                d="M15.75 5.25a3 3 0 0 1 3 3m3 0a6 6 0 0 1-7.029 5.912c-.563-.097-1.159.026-1.563.43L10.5 17.25H8.25v2.25H6v2.25H2.25v-2.818c0-.597.237-1.17.659-1.591l6.499-6.499c.404-.404.527-1 .43-1.563A6 6 0 1 1 21.75 8.25Z"
                              />
                            </svg>
                            <span
                              class="absolute bottom-full left-0 -translate-y-1 invisible group-hover:visible bg-black text-white text-xs px-2 py-1 whitespace-nowrap z-10"
                              role="tooltip"
                              aria-label="Internal site or authentication required."
                            >
                              Internal site or auth required
                            </span>
                          </span>
                        )}

                        {project.confidential && (
                          <span
                            class="relative group text-[#F46665]"
                            role="listitem"
                          >
                            <svg
                              class="w-4 h-4"
                              xmlns="http://www.w3.org/2000/svg"
                              viewBox="0 0 20 20"
                              fill="currentColor"
                              aria-hidden="true"
                            >
                              <path
                                fill-rule="evenodd"
                                d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z"
                                clip-rule="evenodd"
                              />
                            </svg>
                            <span
                              class="absolute bottom-full left-0 -translate-y-1 invisible group-hover:visible bg-black text-white text-xs px-2 py-1 whitespace-nowrap z-10"
                              role="tooltip"
                              aria-label="Confidential Client"
                            >
                              Confidential Client
                            </span>
                          </span>
                        )}
                      </div>
                    </td>

                    {/* Project name column */}
                    <td class="py-0.5 pr-4 align-top font-medium md:py-2.5 sm:py-1.5">
                      {project.link ? (
                        <a
                          href={project.link}
                          target="_blank"
                          rel="noopener noreferrer"
                          class="inline-flex items-center text-white hover:text-white underline decoration-white/50 hover:decoration-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-[#0E0E2C] rounded-sm"
                        >
                          <span class="flex-grow">{project.project}</span>
                          <svg
                            class="w-4 h-4 ml-1 flex-shrink-0"
                            xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 20 20"
                            fill="currentColor"
                            aria-hidden="true"
                          >
                            <path
                              fill-rule="evenodd"
                              d="M5.22 14.78a.75.75 0 001.06 0l7.22-7.22v5.69a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75h-7.5a.75.75 0 000 1.5h5.69l-7.22 7.22a.75.75 0 000 1.06z"
                              clip-rule="evenodd"
                            />
                          </svg>
                        </a>
                      ) : (
                        <span
                          class={`inline-flex items-center ${project.confidential ? 'text-[#F46665]' : 'text-white'}`}
                        >
                          <span class="flex-grow">{project.project}</span>
                        </span>
                      )}

                      {/* Show Made At on smaller screens */}
                      <div class="mt-1 text-sm font-semibold italic opacity-70 xl:hidden">
                        @ {project.madeAt}
                      </div>

                      {/* Show Service Provided below Made At on smaller screens */}
                      <div class="mt-0.5 text-sm font-semibold italic opacity-80 md:hidden">
                        {project.serviceProvided.join(', ')}
                      </div>
                    </td>
                    <td class="py-0.5 pr-4 align-top whitespace-nowrap xl:table-cell hidden md:py-2.5 sm:py-1.5">
                      {project.madeAt}
                    </td>
                    <td class="py-0.5 pr-4 align-top md:table-cell hidden md:py-2.5 sm:py-1.5">
                      <span class="text-m font-semibold italic opacity-80">
                        {project.serviceProvided.join(', ')}
                      </span>
                    </td>
                    <td class="py-0.5 pr-5 align-top text-right whitespace-nowrap md:py-2.5 sm:py-1.5">
                      <span class="text-lg font-light italic">
                        {project.year}
                      </span>
                    </td>
                  </tr>
                ))
              }
            </tbody>
          </table>
        </div>

        <div class="mt-8 text-center flex flex-col items-center">
          {
            hasMoreProjects && (
              <button
                id="load-more-btn"
                class="px-6 py-2 text-sm font-medium transition-colors mb-10 bg-[#004851] text-white hover:bg-[#005d63] focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-[#0E0E2C]"
              >
                Load More
              </button>
            )
          }

          <!-- Footer buttons - initially hidden if there are more projects to load -->
          <div
            id="projects-footer"
            class={`projects-footer ${hasMoreProjects ? 'hidden' : 'block'} mt-10 w-full opacity-90`}
          >
            <ProfileButtons
              linkedInUrl={linkedInUrl}
              resumeUrl="public/Julian Pineda - 5v4.pdf"
              showBorder={true}
              customClass="w-full"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script define:vars={{ projects, initialVisibleCount }}>
  // Client-side JavaScript for the Load More functionality
  document.addEventListener('DOMContentLoaded', () => {
    const loadMoreBtn = document.getElementById('load-more-btn');
    const projectsFooter = document.getElementById('projects-footer');
    const projectRows = document.querySelectorAll('.project-row');

    // Ensure required elements exist before adding listener
    if (loadMoreBtn && projectsFooter && projectRows.length > 0) {
      let visibleCount = initialVisibleCount;
      const batchSize = 10; // Number of projects to load per click

      loadMoreBtn.addEventListener('click', () => {
        // Calculate the end index for the next batch
        const nextBatchEnd = Math.min(
          visibleCount + batchSize,
          projects.length,
        );

        // Show the next batch of projects
        for (let i = visibleCount; i < nextBatchEnd; i++) {
          if (projectRows[i]) {
            projectRows[i].classList.remove('hidden');
          }
        }

        // Update the visible count
        visibleCount = nextBatchEnd;

        // Hide the button and show footer if we've shown all projects
        if (visibleCount >= projects.length) {
          loadMoreBtn.style.display = 'none';
          projectsFooter.classList.remove('hidden');
          projectsFooter.classList.add('block');
        }
      });

      // Initial check in case there are fewer projects than initialVisibleCount
      if (visibleCount >= projects.length) {
        loadMoreBtn.style.display = 'none';
        projectsFooter.classList.remove('hidden');
        projectsFooter.classList.add('block');
      }
    } else {
      // Optionally log an error if elements aren't found, useful for debugging
      if (!loadMoreBtn) console.error('Load More button not found');
      if (!projectsFooter) console.error('Projects footer not found');
      if (projectRows.length === 0) console.error('Project rows not found');
    }
  });
</script>
