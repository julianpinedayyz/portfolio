---
export interface Props {
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  [key: string]: any;
}

const {
  variant = 'primary',
  size = 'md',
  class: className,
  ...rest
} = Astro.props;

// Determine variant classes
const variantClasses = {
  primary: 'bg-lime-400 text-gray-900 hover:bg-lime-500 focus:ring-lime-500',
  secondary:
    'bg-purple-400 text-white hover:bg-purple-500 focus:ring-purple-500',
  outline:
    'border border-gray-300 text-gray-800 hover:bg-gray-100 focus:ring-gray-500',
  ghost:
    'border border-blue-600 text-blue-600 hover:bg-blue-600/10 focus:ring-blue-500',
};

// Determine size classes
const sizeClasses = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2',
  lg: 'px-6 py-3 text-lg',
};

const classes = [
  'inline-flex items-center justify-center font-medium rounded-[2px] focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors',
  variantClasses[variant],
  sizeClasses[size],
  className,
].join(' ');
---

<button class={classes} {...rest}>
  <slot />
</button>
