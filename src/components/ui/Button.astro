---
export interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  target?: string;
  rel?: string;
  type?: 'button' | 'submit' | 'reset';
}

const {
  href,
  variant = 'primary',
  size = 'md',
  class: className = '',
  target,
  rel,
  type = 'button',
} = Astro.props;

// Base classes
const baseClasses =
  'rounded-md font-medium transition-all focus:outline-none focus:ring-2 focus:ring-offset-2';

// Size classes
const sizeClasses = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-5 py-2.5 text-base',
  lg: 'px-6 py-3 text-lg',
};

// Variant classes
const variantClasses = {
  primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',
  secondary:
    'bg-gray-200 text-gray-800 hover:bg-gray-300 focus:ring-gray-500 dark:bg-gray-700 dark:text-gray-100 dark:hover:bg-gray-600',
  outline:
    'border border-blue-600 text-blue-600 hover:bg-blue-600/10 focus:ring-blue-500 dark:border-blue-400 dark:text-blue-400',
};

const classes = `${baseClasses} ${sizeClasses[size]} ${variantClasses[variant]} ${className}`;
---

{
  href ? (
    <a href={href} class={classes} target={target} rel={rel}>
      <slot />
    </a>
  ) : (
    <button type={type} class={classes}>
      <slot />
    </button>
  )
}
